AWSTemplateFormatVersion: '2010-09-09'
Description: Fan-In Pattern - Aggregate SQS events into batched S3 writes

Resources:

  ###############################################
  # SQS Queues for Fan-In
  ###############################################
  FanInQueueA:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: fanin-buffer-queue-a

  FanInQueueB:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: fanin-buffer-queue-b

  FanInQueueC:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: fanin-buffer-queue-c

  ###############################################
  # S3 Bucket for Batched Output
  ###############################################
  FanInBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "fanin-batch-${AWS::AccountId}-${AWS::Region}"

  ###############################################
  # IAM Role for Lambda to Read SQS and Write to S3
  ###############################################
  FanInLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: FanInLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - s3:PutObject
                Resource: '*'
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource:
                  - !GetAtt FanInQueueA.Arn
                  - !GetAtt FanInQueueB.Arn
                  - !GetAtt FanInQueueC.Arn

  ###############################################
  # Lambda Function to Batch Messages into S3
  ###############################################
  FanInBatchLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.11
      Handler: index.lambda_handler
      Timeout: 30
      Role: !GetAtt FanInLambdaRole.Arn
      Environment:
        Variables:
          BUCKET_NAME: !Ref FanInBucket
      Code:
        ZipFile: |
          import boto3, os, json, uuid, datetime
          s3 = boto3.client('s3')
          def lambda_handler(event, context):
              batch = [json.loads(r['body']) for r in event['Records']]
              content = json.dumps(batch, indent=2)
              key = f"batches/{datetime.datetime.utcnow().isoformat()}_{uuid.uuid4().hex}.json"
              s3.put_object(Bucket=os.environ['BUCKET_NAME'], Key=key, Body=content.encode('utf-8'))
              print(f"Wrote batch of {len(batch)} messages to {key}")
              return {"status": "ok", "count": len(batch)}

  ###############################################
  # Event Source Mappings - SQS â†’ Lambda
  ###############################################
  FanInEventSourceMappingA:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt FanInQueueA.Arn
      FunctionName: !Ref FanInBatchLambda
      MaximumBatchingWindowInSeconds: 5

  FanInEventSourceMappingB:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt FanInQueueB.Arn
      FunctionName: !Ref FanInBatchLambda
      MaximumBatchingWindowInSeconds: 5

  FanInEventSourceMappingC:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 10
      Enabled: true
      EventSourceArn: !GetAtt FanInQueueC.Arn
      FunctionName: !Ref FanInBatchLambda
      MaximumBatchingWindowInSeconds: 5

Outputs:
  FanInQueueAUrl:
    Value: !Ref FanInQueueA
  FanInQueueBUrl:
    Value: !Ref FanInQueueB
  FanInQueueCUrl:
    Value: !Ref FanInQueueC
  FanInBucket:
    Value: !Ref FanInBucket
  BatchLambda:
    Value: !Ref FanInBatchLambda
    Description: Lambda that writes SQS batches into S3
